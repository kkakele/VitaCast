TARGET = VitaCast
OBJS = main.o ui/ui_manager.o audio/audio_player.o audio/atrac_decoder.o network/network_manager.o apple/apple_sync.o

# Bibliotecas segun mejores practicas de VitaSDK (orden correcto de linking)
LIBS = -lvita2d -lSceLibKernel_stub \
  -lSceDisplay_stub -lSceGxm_stub \
  -lSceSysmodule_stub -lSceCtrl_stub \
  -lScePgf_stub -lScePvf_stub \
  -lSceCommonDialog_stub \
  -lfreetype -lpng -ljpeg -lz \
  -lSceNet_stub -lSceNetCtl_stub -lSceHttp_stub -lSceSsl_stub \
  -lSceAudio_stub -lSceAudioIn_stub \
  -lSceAppUtil_stub -lSceAppMgr_stub \
  -lm

PREFIX = arm-vita-eabi
CC = $(PREFIX)-gcc
CFLAGS = -Wl,-q -Wall -O2 -std=gnu11 -I. -Iui -Iaudio -Inetwork -Iapple
CFLAGS += -D__PSP2__ -DVITA

# Include directories
INCLUDES = -I. -Iui -Iaudio -Inetwork -Iapple

# Source directories
UI_DIR = ui
AUDIO_DIR = audio
NETWORK_DIR = network
APPLE_DIR = apple

all: $(TARGET).vpk

$(TARGET).vpk: eboot.bin param.sfo
	# Crear VPK con estructura correcta
	vita-pack-vpk -s param.sfo -b eboot.bin \
	  -a sce_sys/icon0.png=sce_sys/icon0.png \
	  -a sce_sys/livearea/contents/bg.png=sce_sys/livearea/contents/bg.png \
	  -a sce_sys/livearea/contents/bg0.png=sce_sys/livearea/contents/bg0.png \
	  -a sce_sys/livearea/contents/startup.png=sce_sys/livearea/contents/startup.png \
	  -a sce_sys/livearea/contents/template.xml=sce_sys/livearea/contents/template.xml \
	  $(TARGET).vpk

param.sfo:
	# TITLE_ID debe tener 9 caracteres seg?n est?ndar VitaSDK
	vita-mksfoex -s TITLE_ID=VCAST2000 \
	  -s APP_VER=02.00 \
	  -s CONTENT_ID=UP0000-VCAST2000_00-0000000000000000 \
	  "$(TARGET)" param.sfo

eboot.bin: $(OBJS)
	$(CC) $(CFLAGS) $^ -Wl,--start-group $(LIBS) -Wl,--end-group -o $@

# Main source
main.o: main.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# UI Manager
ui/ui_manager.o: ui/ui_manager.c ui/ui_manager.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Audio Player
audio/audio_player.o: audio/audio_player.c audio/audio_player.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# ATRAC Decoder
audio/atrac_decoder.o: audio/atrac_decoder.c audio/atrac_decoder.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Network Manager
network/network_manager.o: network/network_manager.c network/network_manager.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Apple Sync
apple/apple_sync.o: apple/apple_sync.c apple/apple_sync.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Clean target
clean:
	rm -rf $(TARGET).vpk eboot.bin param.sfo $(OBJS)
	rm -rf ui/*.o audio/*.o network/*.o apple/*.o

# Install target (for development)
install: $(TARGET).vpk
	vita-install-vpk $(TARGET).vpk

# Debug build
debug: CFLAGS += -g -DDEBUG
debug: $(TARGET).vpk

# Release build
release: CFLAGS += -O3 -DNDEBUG
release: $(TARGET).vpk

# Help target
help:
	@echo "VitaCast Build System"
	@echo "====================="
	@echo "Available targets:"
	@echo "  all      - Build the complete VitaCast VPK"
	@echo "  debug    - Build with debug symbols"
	@echo "  release  - Build optimized release version"
	@echo "  clean    - Clean all build artifacts"
	@echo "  install  - Install VPK to Vita (requires vita-install-vpk)"
	@echo "  help     - Show this help message"
	@echo ""
	@echo "Features:"
	@echo "  - PS Vita Music App inspired UI"
	@echo "  - Apple Music integration"
	@echo "  - iCloud synchronization"
	@echo "  - Podcast search and download"
	@echo "  - Multiple audio format support (MP3, AAC, OGG, WAV, M4A)"
	@echo "  - Sony ATRAC3/ATRAC3plus support"
	@echo "  - Offline playback"

.PHONY: clean install debug release help all